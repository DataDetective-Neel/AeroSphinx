AeroSphinx: PM2.5 Air Quality Prediction Model
Overview
This project aims to predict ground-level PM2.5 concentrations using a combination of satellite imagery data, ground-based sensor readings, and meteorological data. By integrating these diverse datasets, the model leverages a machine learning approach—specifically a Random Forest Regressor—to forecast air quality.
The primary workflow involves extracting, cleaning, and merging data from three main sources:
1. Aerosol Optical Depth (AOD) from INSAT-3DR/3DS satellites (in .h5 format).
2. Ground-level PM2.5 measurements from the Central Pollution Control Board (CPCB) (in .csv format).
3. Meteorological data from NASA's MERRA-2 reanalysis (in .nc format).
The project is structured into a Jupyter Notebook for exploration and a standalone Python script for the final, consolidated modeling process.
Repository
This project is hosted on GitHub. You can view the complete source code, track issues, and contribute to the project here:
* GitHub Repository: https://github.com/DataDetective-Neel/AeroSphinx
Project Files
* Data_Reading.ipynb: A Jupyter Notebook containing the detailed, step-by-step process of data exploration, preprocessing, initial model training (including Linear Regression and Random Forest), and evaluation. This notebook is excellent for understanding the methodology and data handling techniques used.
* AQI_Model.py: A consolidated Python script that encapsulates the entire pipeline. It loads the data from all sources, merges them, performs feature engineering, trains the Random Forest model, and makes a prediction for a specific date. This is the main script for execution.
* predicted_pm25.csv: The output file generated by AQI_Model.py, which contains the final PM2.5 prediction for the target date.
Methodology
The prediction process follows these key steps:
1. Data Extraction:
   * AOD values are extracted from HDF5 (.h5) files for a specific geographical region (e.g., Faridabad).
   * Historical PM2.5 data is read from CPCB's CSV files.
   * Meteorological variables (like temperature, pressure, humidity, wind speed) are extracted from MERRA-2 NetCDF (.nc) files.
2. Data Preprocessing:
   * Timestamps are parsed and standardized across all datasets.
   * Data is aggregated to a daily frequency to ensure consistency for merging.
3. Feature Engineering:
   * To improve model accuracy, additional features are created from the raw meteorological data, such as:
      * Temp_Diff: The difference between surface skin temperature and 2-meter air temperature.
      * Humidity_Ratio: A ratio derived from specific humidity and air temperature.
4. Data Merging:
   * The processed AOD, PM2.5, and meteorological dataframes are merged into a single, comprehensive dataset based on the date.
5. Model Training and Prediction:
   * The combined dataset is split into training and testing sets.
   * A RandomForestRegressor is trained on the training data. This model is chosen for its robustness and ability to handle complex, non-linear relationships.
   * The trained model is then used to predict the PM2.5 value for a target date using the corresponding AOD and MERRA-2 data.
How to Run the Project
1. Prerequisites
Ensure you have Python installed with the following libraries:
pip install pandas numpy scikit-learn netcdf4 xarray h5py

2. Data Setup
Create the following directory structure and place your data files accordingly:
.
├── AQI_Model.py
├── Data_Reading.ipynb
|
├── CPCB Data/
│   └── City_wise_raw_data_... .csv
|
├── aod_folder/
│   └── 3DIMG_... .h5
│
└── merra_downloads/
   └── MERRA2_... .nc

The scripts also generate intermediate files like aod_data.csv and combined_pm2.5_para.csv.
3. Execution
* For Exploration: Open and run the cells in Data_Reading.ipynb using Jupyter Lab or Jupyter Notebook to see the data processing and modeling steps in detail.
* For Prediction: Run the main Python script from your terminal:
python AQI_Model.py

This will execute the full pipeline, print evaluation metrics (MAE, RMSE, R²), and save the final prediction to predicted_pm25.csv.
Author

   * Indraneel Chatterjee - DataDetective-Neel
   * Kanishk Garg
